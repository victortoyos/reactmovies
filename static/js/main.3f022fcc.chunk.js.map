{"version":3,"sources":["store/actions/updateMovies.js","App.js","store/reducers/movieListReducer.js","store/index.js","index.js"],"names":["UPDATE_MOVIES","updateMovies","type","payload","App","this","props","movies","name","onClick","React","Component","connect","state","dispatch","movieListReducer","roorReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"wNAAaA,EAAgB,gBAQdC,EALM,CACjBC,KAAMF,EACNG,QAAS,oB,sBCCPC,E,4JAMJ,WACE,OACE,gCACE,wCACA,4BAAIC,KAAKC,MAAMC,OAAOC,OACtB,wBACAC,QAASJ,KAAKC,MAAML,aADpB,iC,GAXUS,IAAMC,WAmCTC,eAdS,SAACC,GACvB,MAAO,CACLN,OAAQM,EAAMN,WAKS,SAACO,GAC1B,MAAO,CACLb,aAAc,kBAAMa,EAASb,OAKlBW,CAA8CR,G,OC3B9CW,EAXU,WAAkC,IAAjCF,EAAgC,uDAAxB,GAAwB,yCAAnBX,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACzC,OAAOD,GACH,KAAKF,EACD,MAAO,CACHQ,KAAML,GAEd,QACI,OAAOU,ICJbG,EAAcC,YAAgB,CAChCV,OAAQQ,IAcGG,EAJDC,YAAYH,EANL,CACjBT,OAAQ,CACJC,KAAM,eAKVY,OAAOC,8BACPD,OAAOC,gCCZXC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.3f022fcc.chunk.js","sourcesContent":["export const UPDATE_MOVIES = 'UPDATE_MOVIES';\r\n\r\n//la action para actualizar \r\nconst updateMovies = {\r\n    type: UPDATE_MOVIES,\r\n    payload: \"CLUB DE LA LUCHA\"\r\n};\r\n\r\nexport default updateMovies;","import React from 'react';\nimport updateMovies from './store/actions/updateMovies';\nimport { connect } from 'react-redux';\n\nimport './App.css';\n\nclass App extends React.Component {\n  /*componentDidMount() {\n    const {updateMovies} = this.props;\n    updateMovies();\n  }*/\n\n  render() {\n    return (\n      <div>\n        <h2>Movies</h2>\n        <p>{this.props.movies.name}</p>\n        <button \n        onClick={this.props.updateMovies}>\n          Cambiar peli\n        </button>\n      </div>\n    );\n  }\n};\n\n//coge de la store los datos que necesita el componente\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies\n  }\n}\n\n//dispatch (dispara) la acción\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateMovies: () => dispatch(updateMovies)\n  }\n}\n\n//connect para que el componente acceda a la store\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\n","import { UPDATE_MOVIES } from \"../actions/updateMovies\";\r\n\r\n//el reducer que toma la action y retorna el payload\r\nconst movieListReducer = (state = {}, {type, payload}) => {\r\n    switch(type) {\r\n        case UPDATE_MOVIES:\r\n            return {\r\n                name: payload\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default movieListReducer;","//aquí es donde se crea la store y se combinan los reducers\r\n\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nimport movieListReducer from \"./reducers/movieListReducer\";\r\n\r\nconst roorReducer = combineReducers({\r\n    movies: movieListReducer\r\n});\r\n\r\n//esto es lo que devolverá siempre, movies es lo que necesitamos en el componente\r\nconst initialState = {\r\n    movies: {\r\n        name: 'Terminator'\r\n    }\r\n};\r\n\r\nconst store = createStore(roorReducer, initialState, \r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && \r\n    window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}